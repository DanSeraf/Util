#!/usr/bin/env python3

import argparse
import urllib.request
import urllib.parse
import re
import subprocess
import fileop
import player

def generateUrl(w_input):
    query_string = urllib.parse.urlencode({"search_query" : w_input})
    html_content = urllib.request.urlopen("http://www.youtube.com/results?" + query_string)
    search_results = re.findall(r'href=\"\/watch\?v=(.{11})', html_content.read().decode())
    url = "http://www.youtube.com/watch?v=" + search_results[0]
    return url

def parseArgs(args):
    parse_dict = vars(args)
    if parse_dict['add'] != None:
        w_input = '+'.join(parse_dict['add'])
        my_url = generateUrl(w_input)
        fileop.addLink(my_url)
    elif parse_dict['play'] == True:
        player.start()
    elif parse_dict['clear'] == True:
        fileop.clearLink()
    elif parse_dict['view'] == True:
        fileop.songViewer()
    else:
        print('[WARN] Error with parse')

def main():
    parser = argparse.ArgumentParser(description='')
    parser.add_argument('-a', '--add', type=str, nargs='*',
                        help='Add url to queue')
    parser.add_argument('-p', '--play', action='store_true', default=False,
                        help='Play songs in queue')
    parser.add_argument('-c', '--clear', action='store_true', default=False,
                        help='Clear queue')
    parser.add_argument('-v', '--view', action='store_true', default=False,
                        help='View song in queue')
    args = parser.parse_args()
    parseArgs(args) 

if __name__ == '__main__':
    main()

